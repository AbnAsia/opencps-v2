create table opencps_dossier (
	uuid_ VARCHAR(75) null,
	dossierId LONG not null primary key,
	groupId LONG,
	companyId LONG,
	userId LONG,
	userName VARCHAR(75) null,
	createDate DATE null,
	modifiedDate DATE null,
	referenceUid VARCHAR(75) null,
	counter INTEGER,
	serviceCode VARCHAR(75) null,
	serviceName VARCHAR(75) null,
	govAgencyCode VARCHAR(75) null,
	govAgencyName VARCHAR(75) null,
	applicantName VARCHAR(75) null,
	applicantIdType VARCHAR(75) null,
	applicantIdNo VARCHAR(75) null,
	applicantIdDate DATE null,
	address VARCHAR(75) null,
	cityCode VARCHAR(75) null,
	cityName VARCHAR(75) null,
	districtCode VARCHAR(75) null,
	districtName VARCHAR(75) null,
	wardCode VARCHAR(75) null,
	wardName VARCHAR(75) null,
	contactName VARCHAR(75) null,
	contactTelNo VARCHAR(75) null,
	contactEmail VARCHAR(75) null,
	dossierTemplateNo VARCHAR(75) null,
	dossierTemplateName VARCHAR(75) null,
	dossierNote VARCHAR(75) null,
	submissionNote VARCHAR(75) null,
	applicantNote VARCHAR(75) null,
	briefNote VARCHAR(75) null,
	dossierNo VARCHAR(75) null,
	submitting BOOLEAN,
	submitDate DATE null,
	receiveDate DATE null,
	dueDate DATE null,
	releaseDate DATE null,
	finishDate DATE null,
	cancellingDate DATE null,
	correcttingDate DATE null,
	dossierStatus VARCHAR(75) null,
	dossierStatusText VARCHAR(75) null,
	dossierSubStatus VARCHAR(75) null,
	dossierSubStatusText VARCHAR(75) null,
	folderId LONG,
	dossierActionId LONG,
	viaPost INTEGER,
	postAddress VARCHAR(75) null,
	password_ VARCHAR(75) null,
	notification BOOLEAN
);

create table opencps_dossieraction (
	uuid_ VARCHAR(75) null,
	dossierActionId LONG not null primary key,
	companyId LONG,
	groupId LONG,
	userId LONG,
	userName VARCHAR(75) null,
	createDate DATE null,
	modifiedDate DATE null,
	dossierId LONG,
	serviceProcessId LONG,
	previousActionId LONG,
	actionCode VARCHAR(75) null,
	actionUser VARCHAR(75) null,
	actionName VARCHAR(75) null,
	actionNote VARCHAR(75) null,
	actionOverdue INTEGER,
	syncActionCode VARCHAR(75) null,
	pending VARCHAR(75) null,
	rollbackable VARCHAR(75) null,
	stepCode VARCHAR(75) null,
	stepName VARCHAR(75) null,
	dueDate DATE null,
	nextActionId LONG,
	payload VARCHAR(75) null,
	stepInstruction VARCHAR(75) null
);

create table opencps_dossieractionuser (
	uuid_ VARCHAR(75) null,
	dossierActionId LONG not null,
	userId LONG not null,
	moderator INTEGER,
	assigned BOOLEAN,
	visited BOOLEAN,
	primary key (dossierActionId, userId)
);

create table opencps_dossierfile (
	uuid_ VARCHAR(75) null,
	dossierFileId LONG not null primary key,
	groupId LONG,
	companyId LONG,
	userId LONG,
	userName VARCHAR(75) null,
	createDate DATE null,
	modifiedDate DATE null,
	dossierId LONG,
	referenceUid VARCHAR(75) null,
	dossierTemplateNo VARCHAR(75) null,
	dossierPartNo VARCHAR(75) null,
	dossierPartType VARCHAR(75) null,
	fileTemplateNo VARCHAR(75) null,
	displayName VARCHAR(75) null,
	formData VARCHAR(75) null,
	fileEntryId LONG,
	original BOOLEAN,
	eForm BOOLEAN,
	isNew BOOLEAN,
	removed BOOLEAN,
	signCheck INTEGER,
	signInfo VARCHAR(75) null,
	formScript VARCHAR(75) null,
	formReport VARCHAR(75) null
);

create table opencps_dossierlog (
	uuid_ VARCHAR(75) null,
	dossierLogId LONG not null primary key,
	groupId LONG,
	companyId LONG,
	userId LONG,
	userName VARCHAR(75) null,
	createDate DATE null,
	modifiedDate DATE null,
	dossierId LONG,
	author VARCHAR(75) null,
	content VARCHAR(75) null,
	notificationType INTEGER,
	payload VARCHAR(75) null
);

create table opencps_dossierpart (
	uuid_ VARCHAR(75) null,
	dossierPartId LONG not null primary key,
	groupId LONG,
	companyId LONG,
	userId LONG,
	userName VARCHAR(75) null,
	createDate DATE null,
	modifiedDate DATE null,
	templateNo VARCHAR(75) null,
	partNo VARCHAR(75) null,
	partName VARCHAR(75) null,
	partTip VARCHAR(75) null,
	partType INTEGER,
	multiple BOOLEAN,
	formScript VARCHAR(75) null,
	formReport VARCHAR(75) null,
	sampleData VARCHAR(75) null,
	required BOOLEAN,
	fileTemplateNo VARCHAR(75) null,
	eSign BOOLEAN
);

create table opencps_dossiertemplate (
	uuid_ VARCHAR(75) null,
	dossierTemplateId LONG not null primary key,
	groupId LONG,
	companyId LONG,
	userId LONG,
	userName VARCHAR(75) null,
	createDate DATE null,
	modifiedDate DATE null,
	templateName VARCHAR(75) null,
	description VARCHAR(75) null,
	templateNo VARCHAR(75) null
);

create table opencps_paymentconfig (
	uuid_ VARCHAR(75) null,
	paymentConfigId LONG not null primary key,
	groupId LONG,
	companyId LONG,
	userId LONG,
	userName VARCHAR(75) null,
	createDate DATE null,
	modifiedDate DATE null,
	govAgencyCode VARCHAR(75) null,
	govAgencyName VARCHAR(75) null,
	govAgencyTaxNo VARCHAR(75) null,
	invoiceTemplateNo VARCHAR(75) null,
	invoiceIssueNo VARCHAR(75) null,
	invoiceLastNo VARCHAR(75) null,
	invoiceForm VARCHAR(75) null,
	bankInfo VARCHAR(75) null,
	epaymentConfig VARCHAR(75) null
);

create table opencps_paymentfile (
	uuid_ VARCHAR(75) null,
	paymentFileId LONG not null primary key,
	groupId LONG,
	companyId LONG,
	userId LONG,
	userName VARCHAR(75) null,
	createDate DATE null,
	modifiedDate DATE null,
	dossierId LONG,
	referenceUid VARCHAR(75) null,
	govAgencyCode VARCHAR(75) null,
	govAgencyName VARCHAR(75) null,
	isNew BOOLEAN,
	paymentFee VARCHAR(75) null,
	paymentAmount LONG,
	paymentNote VARCHAR(75) null,
	epaymentProfile VARCHAR(75) null,
	bankInfo VARCHAR(75) null,
	paymentStatus INTEGER,
	paymentMethod VARCHAR(75) null,
	confirmDatetime DATE null,
	confirmPayload VARCHAR(75) null,
	confirmFileEntryId LONG,
	confirmNote VARCHAR(75) null,
	approveDatetime DATE null,
	accountUserName VARCHAR(75) null,
	govAgencyTaxNo VARCHAR(75) null,
	invoiceTemplateNo VARCHAR(75) null,
	invoiceIssueNo VARCHAR(75) null,
	invoiceNo VARCHAR(75) null,
	invoiceFileEntryId LONG
);

create table opencps_processaction (
	uuid_ VARCHAR(75) null,
	processActionId LONG not null primary key,
	companyId LONG,
	groupId LONG,
	userId LONG,
	userName VARCHAR(75) null,
	createDate DATE null,
	modifiedDate DATE null,
	serviceProcessId LONG,
	preStepCode VARCHAR(75) null,
	postStepCode VARCHAR(75) null,
	autoEvent VARCHAR(75) null,
	preCondition VARCHAR(75) null,
	actionCode VARCHAR(75) null,
	actionName VARCHAR(75) null,
	allowAssignUser BOOLEAN,
	assignUserId LONG,
	requestPayment BOOLEAN,
	paymentFee VARCHAR(75) null,
	createDossierFiles VARCHAR(75) null,
	returnDossierFiles VARCHAR(75) null,
	makeBriefNote VARCHAR(75) null,
	syncActionCode VARCHAR(75) null,
	rollbackable BOOLEAN
);

create table opencps_processoption (
	uuid_ VARCHAR(75) null,
	processOptionId LONG not null primary key,
	groupId LONG,
	companyId LONG,
	userId LONG,
	userName VARCHAR(75) null,
	createDate DATE null,
	modifiedDate DATE null,
	serviceConfigId LONG,
	optionOrder INTEGER,
	autoSelect VARCHAR(75) null,
	dossierTemplateId LONG,
	serviceProcessId LONG,
	instructionNote VARCHAR(75) null,
	submissionNote VARCHAR(75) null
);

create table opencps_processstep (
	uuid_ VARCHAR(75) null,
	processStepId LONG not null primary key,
	companyId LONG,
	groupId LONG,
	userId LONG,
	userName VARCHAR(75) null,
	createDate DATE null,
	modifiedDate DATE null,
	stepCode VARCHAR(75) null,
	serviceProcessId LONG,
	stepName VARCHAR(75) null,
	sequenceNo VARCHAR(75) null,
	dossierStatus VARCHAR(75) null,
	dossierSubStatus VARCHAR(75) null,
	durationCount INTEGER,
	customProcessUrl VARCHAR(75) null,
	stepInstruction VARCHAR(75) null,
	editable BOOLEAN
);

create table opencps_processsteprole (
	uuid_ VARCHAR(75) null,
	processStepId LONG not null,
	roleId LONG not null,
	moderator BOOLEAN,
	condition_ VARCHAR(75) null,
	primary key (processStepId, roleId)
);

create table opencps_serviceconfig (
	uuid_ VARCHAR(75) null,
	serviceConfigId LONG not null primary key,
	groupId LONG,
	companyId LONG,
	userId LONG,
	userName VARCHAR(75) null,
	createDate DATE null,
	modifiedDate DATE null,
	serviceInfoId LONG,
	govAgencyCode VARCHAR(75) null,
	govAgencyName VARCHAR(75) null,
	serviceInstruction VARCHAR(75) null,
	serviceLevel INTEGER,
	serviceUrl VARCHAR(75) null,
	forCitizen BOOLEAN,
	forBusiness BOOLEAN,
	postService BOOLEAN,
	registration BOOLEAN
);

create table opencps_serviceinfo (
	uuid_ VARCHAR(75) null,
	serviceInfoId LONG not null primary key,
	groupId LONG,
	companyId LONG,
	userId LONG,
	userName VARCHAR(75) null,
	createDate DATE null,
	modifiedDate DATE null,
	serviceCode VARCHAR(75) null,
	serviceName VARCHAR(75) null,
	processText VARCHAR(75) null,
	methodText VARCHAR(75) null,
	dossierText VARCHAR(75) null,
	conditionText VARCHAR(75) null,
	durationText VARCHAR(75) null,
	applicantText VARCHAR(75) null,
	resultText VARCHAR(75) null,
	regularText VARCHAR(75) null,
	feeText VARCHAR(75) null,
	administrationCode VARCHAR(75) null,
	administrationName VARCHAR(75) null,
	administrationIndex VARCHAR(75) null,
	domainCode VARCHAR(75) null,
	domainName VARCHAR(75) null,
	domainIndex VARCHAR(75) null,
	maxLevel INTEGER,
	public_ BOOLEAN
);

create table opencps_serviceprocess (
	uuid_ VARCHAR(75) null,
	serviceProcessId LONG not null primary key,
	companyId LONG,
	groupId LONG,
	userId LONG,
	userName VARCHAR(75) null,
	createDate DATE null,
	modifiedDate DATE null,
	processNo VARCHAR(75) null,
	processName VARCHAR(75) null,
	description VARCHAR(75) null,
	durationCount INTEGER,
	durationUnit INTEGER,
	counter INTEGER,
	generateDossierNo BOOLEAN,
	dossierNoPattern VARCHAR(75) null,
	generateDueDate BOOLEAN,
	dueDatePattern VARCHAR(75) null,
	generatePassword BOOLEAN,
	directNotification BOOLEAN,
	serverNo VARCHAR(75) null
);

create table opencps_serviceprocessrole (
	uuid_ VARCHAR(75) null,
	serviceProcessId LONG not null,
	roleId LONG not null,
	moderator BOOLEAN,
	condition_ VARCHAR(75) null,
	primary key (serviceProcessId, roleId)
);

create table opencps_services_filetemplates (
	uuid_ VARCHAR(75) null,
	serviceInfoId LONG not null,
	fileTemplateNo VARCHAR(75) not null,
	templateName VARCHAR(75) null,
	fileEntryId LONG,
	primary key (serviceInfoId, fileTemplateNo)
);