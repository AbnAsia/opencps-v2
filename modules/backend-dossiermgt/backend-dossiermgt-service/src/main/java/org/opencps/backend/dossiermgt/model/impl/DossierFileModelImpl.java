/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package org.opencps.backend.dossiermgt.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.exportimport.kernel.lar.StagedModelType;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.PortalUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;

import org.opencps.backend.dossiermgt.model.DossierFile;
import org.opencps.backend.dossiermgt.model.DossierFileModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the DossierFile service. Represents a row in the &quot;opencps_dossierfile&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link DossierFileModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link DossierFileImpl}.
 * </p>
 *
 * @author huymq
 * @see DossierFileImpl
 * @see DossierFile
 * @see DossierFileModel
 * @generated
 */
@ProviderType
public class DossierFileModelImpl extends BaseModelImpl<DossierFile>
	implements DossierFileModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a dossier file model instance should use the {@link DossierFile} interface instead.
	 */
	public static final String TABLE_NAME = "opencps_dossierfile";
	public static final Object[][] TABLE_COLUMNS = {
			{ "uuid_", Types.VARCHAR },
			{ "dossierFileId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "dossierId", Types.BIGINT },
			{ "referenceUid", Types.VARCHAR },
			{ "dossierTemplateNo", Types.VARCHAR },
			{ "dossierPartNo", Types.VARCHAR },
			{ "fileTemplateNo", Types.VARCHAR },
			{ "displayName", Types.VARCHAR },
			{ "formData", Types.VARCHAR },
			{ "fileEntryId", Types.BIGINT },
			{ "dossierFileNo", Types.TIMESTAMP },
			{ "dossierFileDate", Types.VARCHAR },
			{ "original", Types.BOOLEAN },
			{ "isNew", Types.BOOLEAN },
			{ "signed", Types.BOOLEAN },
			{ "signCheck", Types.INTEGER },
			{ "signInfo", Types.VARCHAR },
			{ "formScript", Types.VARCHAR },
			{ "formReport", Types.VARCHAR }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("uuid_", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("dossierFileId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("dossierId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("referenceUid", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("dossierTemplateNo", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("dossierPartNo", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("fileTemplateNo", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("displayName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("formData", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("fileEntryId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("dossierFileNo", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("dossierFileDate", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("original", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("isNew", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("signed", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("signCheck", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("signInfo", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("formScript", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("formReport", Types.VARCHAR);
	}

	public static final String TABLE_SQL_CREATE = "create table opencps_dossierfile (uuid_ VARCHAR(75) null,dossierFileId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,dossierId LONG,referenceUid VARCHAR(75) null,dossierTemplateNo VARCHAR(75) null,dossierPartNo VARCHAR(75) null,fileTemplateNo VARCHAR(75) null,displayName VARCHAR(75) null,formData VARCHAR(75) null,fileEntryId LONG,dossierFileNo DATE null,dossierFileDate VARCHAR(75) null,original BOOLEAN,isNew BOOLEAN,signed BOOLEAN,signCheck INTEGER,signInfo VARCHAR(75) null,formScript VARCHAR(75) null,formReport VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table opencps_dossierfile";
	public static final String ORDER_BY_JPQL = " ORDER BY dossierFile.dossierFileId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY opencps_dossierfile.dossierFileId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(org.opencps.backend.dossiermgt.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.org.opencps.backend.dossiermgt.model.DossierFile"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(org.opencps.backend.dossiermgt.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.org.opencps.backend.dossiermgt.model.DossierFile"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(org.opencps.backend.dossiermgt.service.util.ServiceProps.get(
				"value.object.column.bitmask.enabled.org.opencps.backend.dossiermgt.model.DossierFile"),
			true);
	public static final long COMPANYID_COLUMN_BITMASK = 1L;
	public static final long GROUPID_COLUMN_BITMASK = 2L;
	public static final long UUID_COLUMN_BITMASK = 4L;
	public static final long DOSSIERFILEID_COLUMN_BITMASK = 8L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(org.opencps.backend.dossiermgt.service.util.ServiceProps.get(
				"lock.expiration.time.org.opencps.backend.dossiermgt.model.DossierFile"));

	public DossierFileModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _dossierFileId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setDossierFileId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _dossierFileId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return DossierFile.class;
	}

	@Override
	public String getModelClassName() {
		return DossierFile.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("uuid", getUuid());
		attributes.put("dossierFileId", getDossierFileId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("dossierId", getDossierId());
		attributes.put("referenceUid", getReferenceUid());
		attributes.put("dossierTemplateNo", getDossierTemplateNo());
		attributes.put("dossierPartNo", getDossierPartNo());
		attributes.put("fileTemplateNo", getFileTemplateNo());
		attributes.put("displayName", getDisplayName());
		attributes.put("formData", getFormData());
		attributes.put("fileEntryId", getFileEntryId());
		attributes.put("dossierFileNo", getDossierFileNo());
		attributes.put("dossierFileDate", getDossierFileDate());
		attributes.put("original", getOriginal());
		attributes.put("isNew", getIsNew());
		attributes.put("signed", getSigned());
		attributes.put("signCheck", getSignCheck());
		attributes.put("signInfo", getSignInfo());
		attributes.put("formScript", getFormScript());
		attributes.put("formReport", getFormReport());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String uuid = (String)attributes.get("uuid");

		if (uuid != null) {
			setUuid(uuid);
		}

		Long dossierFileId = (Long)attributes.get("dossierFileId");

		if (dossierFileId != null) {
			setDossierFileId(dossierFileId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Long dossierId = (Long)attributes.get("dossierId");

		if (dossierId != null) {
			setDossierId(dossierId);
		}

		String referenceUid = (String)attributes.get("referenceUid");

		if (referenceUid != null) {
			setReferenceUid(referenceUid);
		}

		String dossierTemplateNo = (String)attributes.get("dossierTemplateNo");

		if (dossierTemplateNo != null) {
			setDossierTemplateNo(dossierTemplateNo);
		}

		String dossierPartNo = (String)attributes.get("dossierPartNo");

		if (dossierPartNo != null) {
			setDossierPartNo(dossierPartNo);
		}

		String fileTemplateNo = (String)attributes.get("fileTemplateNo");

		if (fileTemplateNo != null) {
			setFileTemplateNo(fileTemplateNo);
		}

		String displayName = (String)attributes.get("displayName");

		if (displayName != null) {
			setDisplayName(displayName);
		}

		String formData = (String)attributes.get("formData");

		if (formData != null) {
			setFormData(formData);
		}

		Long fileEntryId = (Long)attributes.get("fileEntryId");

		if (fileEntryId != null) {
			setFileEntryId(fileEntryId);
		}

		Date dossierFileNo = (Date)attributes.get("dossierFileNo");

		if (dossierFileNo != null) {
			setDossierFileNo(dossierFileNo);
		}

		String dossierFileDate = (String)attributes.get("dossierFileDate");

		if (dossierFileDate != null) {
			setDossierFileDate(dossierFileDate);
		}

		Boolean original = (Boolean)attributes.get("original");

		if (original != null) {
			setOriginal(original);
		}

		Boolean isNew = (Boolean)attributes.get("isNew");

		if (isNew != null) {
			setIsNew(isNew);
		}

		Boolean signed = (Boolean)attributes.get("signed");

		if (signed != null) {
			setSigned(signed);
		}

		Integer signCheck = (Integer)attributes.get("signCheck");

		if (signCheck != null) {
			setSignCheck(signCheck);
		}

		String signInfo = (String)attributes.get("signInfo");

		if (signInfo != null) {
			setSignInfo(signInfo);
		}

		String formScript = (String)attributes.get("formScript");

		if (formScript != null) {
			setFormScript(formScript);
		}

		String formReport = (String)attributes.get("formReport");

		if (formReport != null) {
			setFormReport(formReport);
		}
	}

	@Override
	public String getUuid() {
		if (_uuid == null) {
			return StringPool.BLANK;
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_originalUuid == null) {
			_originalUuid = _uuid;
		}

		_uuid = uuid;
	}

	public String getOriginalUuid() {
		return GetterUtil.getString(_originalUuid);
	}

	@Override
	public long getDossierFileId() {
		return _dossierFileId;
	}

	@Override
	public void setDossierFileId(long dossierFileId) {
		_dossierFileId = dossierFileId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException pe) {
			return StringPool.BLANK;
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		_modifiedDate = modifiedDate;
	}

	@Override
	public long getDossierId() {
		return _dossierId;
	}

	@Override
	public void setDossierId(long dossierId) {
		_dossierId = dossierId;
	}

	@Override
	public String getReferenceUid() {
		if (_referenceUid == null) {
			return StringPool.BLANK;
		}
		else {
			return _referenceUid;
		}
	}

	@Override
	public void setReferenceUid(String referenceUid) {
		_referenceUid = referenceUid;
	}

	@Override
	public String getDossierTemplateNo() {
		if (_dossierTemplateNo == null) {
			return StringPool.BLANK;
		}
		else {
			return _dossierTemplateNo;
		}
	}

	@Override
	public void setDossierTemplateNo(String dossierTemplateNo) {
		_dossierTemplateNo = dossierTemplateNo;
	}

	@Override
	public String getDossierPartNo() {
		if (_dossierPartNo == null) {
			return StringPool.BLANK;
		}
		else {
			return _dossierPartNo;
		}
	}

	@Override
	public void setDossierPartNo(String dossierPartNo) {
		_dossierPartNo = dossierPartNo;
	}

	@Override
	public String getFileTemplateNo() {
		if (_fileTemplateNo == null) {
			return StringPool.BLANK;
		}
		else {
			return _fileTemplateNo;
		}
	}

	@Override
	public void setFileTemplateNo(String fileTemplateNo) {
		_fileTemplateNo = fileTemplateNo;
	}

	@Override
	public String getDisplayName() {
		if (_displayName == null) {
			return StringPool.BLANK;
		}
		else {
			return _displayName;
		}
	}

	@Override
	public void setDisplayName(String displayName) {
		_displayName = displayName;
	}

	@Override
	public String getFormData() {
		if (_formData == null) {
			return StringPool.BLANK;
		}
		else {
			return _formData;
		}
	}

	@Override
	public void setFormData(String formData) {
		_formData = formData;
	}

	@Override
	public long getFileEntryId() {
		return _fileEntryId;
	}

	@Override
	public void setFileEntryId(long fileEntryId) {
		_fileEntryId = fileEntryId;
	}

	@Override
	public Date getDossierFileNo() {
		return _dossierFileNo;
	}

	@Override
	public void setDossierFileNo(Date dossierFileNo) {
		_dossierFileNo = dossierFileNo;
	}

	@Override
	public String getDossierFileDate() {
		if (_dossierFileDate == null) {
			return StringPool.BLANK;
		}
		else {
			return _dossierFileDate;
		}
	}

	@Override
	public void setDossierFileDate(String dossierFileDate) {
		_dossierFileDate = dossierFileDate;
	}

	@Override
	public boolean getOriginal() {
		return _original;
	}

	@Override
	public boolean isOriginal() {
		return _original;
	}

	@Override
	public void setOriginal(boolean original) {
		_original = original;
	}

	@Override
	public boolean getIsNew() {
		return _isNew;
	}

	@Override
	public boolean isIsNew() {
		return _isNew;
	}

	@Override
	public void setIsNew(boolean isNew) {
		_isNew = isNew;
	}

	@Override
	public boolean getSigned() {
		return _signed;
	}

	@Override
	public boolean isSigned() {
		return _signed;
	}

	@Override
	public void setSigned(boolean signed) {
		_signed = signed;
	}

	@Override
	public int getSignCheck() {
		return _signCheck;
	}

	@Override
	public void setSignCheck(int signCheck) {
		_signCheck = signCheck;
	}

	@Override
	public String getSignInfo() {
		if (_signInfo == null) {
			return StringPool.BLANK;
		}
		else {
			return _signInfo;
		}
	}

	@Override
	public void setSignInfo(String signInfo) {
		_signInfo = signInfo;
	}

	@Override
	public String getFormScript() {
		if (_formScript == null) {
			return StringPool.BLANK;
		}
		else {
			return _formScript;
		}
	}

	@Override
	public void setFormScript(String formScript) {
		_formScript = formScript;
	}

	@Override
	public String getFormReport() {
		if (_formReport == null) {
			return StringPool.BLANK;
		}
		else {
			return _formReport;
		}
	}

	@Override
	public void setFormReport(String formReport) {
		_formReport = formReport;
	}

	@Override
	public StagedModelType getStagedModelType() {
		return new StagedModelType(PortalUtil.getClassNameId(
				DossierFile.class.getName()));
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			DossierFile.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public DossierFile toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (DossierFile)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		DossierFileImpl dossierFileImpl = new DossierFileImpl();

		dossierFileImpl.setUuid(getUuid());
		dossierFileImpl.setDossierFileId(getDossierFileId());
		dossierFileImpl.setGroupId(getGroupId());
		dossierFileImpl.setCompanyId(getCompanyId());
		dossierFileImpl.setUserId(getUserId());
		dossierFileImpl.setUserName(getUserName());
		dossierFileImpl.setCreateDate(getCreateDate());
		dossierFileImpl.setModifiedDate(getModifiedDate());
		dossierFileImpl.setDossierId(getDossierId());
		dossierFileImpl.setReferenceUid(getReferenceUid());
		dossierFileImpl.setDossierTemplateNo(getDossierTemplateNo());
		dossierFileImpl.setDossierPartNo(getDossierPartNo());
		dossierFileImpl.setFileTemplateNo(getFileTemplateNo());
		dossierFileImpl.setDisplayName(getDisplayName());
		dossierFileImpl.setFormData(getFormData());
		dossierFileImpl.setFileEntryId(getFileEntryId());
		dossierFileImpl.setDossierFileNo(getDossierFileNo());
		dossierFileImpl.setDossierFileDate(getDossierFileDate());
		dossierFileImpl.setOriginal(getOriginal());
		dossierFileImpl.setIsNew(getIsNew());
		dossierFileImpl.setSigned(getSigned());
		dossierFileImpl.setSignCheck(getSignCheck());
		dossierFileImpl.setSignInfo(getSignInfo());
		dossierFileImpl.setFormScript(getFormScript());
		dossierFileImpl.setFormReport(getFormReport());

		dossierFileImpl.resetOriginalValues();

		return dossierFileImpl;
	}

	@Override
	public int compareTo(DossierFile dossierFile) {
		long primaryKey = dossierFile.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof DossierFile)) {
			return false;
		}

		DossierFile dossierFile = (DossierFile)obj;

		long primaryKey = dossierFile.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		DossierFileModelImpl dossierFileModelImpl = this;

		dossierFileModelImpl._originalUuid = dossierFileModelImpl._uuid;

		dossierFileModelImpl._originalGroupId = dossierFileModelImpl._groupId;

		dossierFileModelImpl._setOriginalGroupId = false;

		dossierFileModelImpl._originalCompanyId = dossierFileModelImpl._companyId;

		dossierFileModelImpl._setOriginalCompanyId = false;

		dossierFileModelImpl._setModifiedDate = false;

		dossierFileModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<DossierFile> toCacheModel() {
		DossierFileCacheModel dossierFileCacheModel = new DossierFileCacheModel();

		dossierFileCacheModel.uuid = getUuid();

		String uuid = dossierFileCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			dossierFileCacheModel.uuid = null;
		}

		dossierFileCacheModel.dossierFileId = getDossierFileId();

		dossierFileCacheModel.groupId = getGroupId();

		dossierFileCacheModel.companyId = getCompanyId();

		dossierFileCacheModel.userId = getUserId();

		dossierFileCacheModel.userName = getUserName();

		String userName = dossierFileCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			dossierFileCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			dossierFileCacheModel.createDate = createDate.getTime();
		}
		else {
			dossierFileCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			dossierFileCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			dossierFileCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		dossierFileCacheModel.dossierId = getDossierId();

		dossierFileCacheModel.referenceUid = getReferenceUid();

		String referenceUid = dossierFileCacheModel.referenceUid;

		if ((referenceUid != null) && (referenceUid.length() == 0)) {
			dossierFileCacheModel.referenceUid = null;
		}

		dossierFileCacheModel.dossierTemplateNo = getDossierTemplateNo();

		String dossierTemplateNo = dossierFileCacheModel.dossierTemplateNo;

		if ((dossierTemplateNo != null) && (dossierTemplateNo.length() == 0)) {
			dossierFileCacheModel.dossierTemplateNo = null;
		}

		dossierFileCacheModel.dossierPartNo = getDossierPartNo();

		String dossierPartNo = dossierFileCacheModel.dossierPartNo;

		if ((dossierPartNo != null) && (dossierPartNo.length() == 0)) {
			dossierFileCacheModel.dossierPartNo = null;
		}

		dossierFileCacheModel.fileTemplateNo = getFileTemplateNo();

		String fileTemplateNo = dossierFileCacheModel.fileTemplateNo;

		if ((fileTemplateNo != null) && (fileTemplateNo.length() == 0)) {
			dossierFileCacheModel.fileTemplateNo = null;
		}

		dossierFileCacheModel.displayName = getDisplayName();

		String displayName = dossierFileCacheModel.displayName;

		if ((displayName != null) && (displayName.length() == 0)) {
			dossierFileCacheModel.displayName = null;
		}

		dossierFileCacheModel.formData = getFormData();

		String formData = dossierFileCacheModel.formData;

		if ((formData != null) && (formData.length() == 0)) {
			dossierFileCacheModel.formData = null;
		}

		dossierFileCacheModel.fileEntryId = getFileEntryId();

		Date dossierFileNo = getDossierFileNo();

		if (dossierFileNo != null) {
			dossierFileCacheModel.dossierFileNo = dossierFileNo.getTime();
		}
		else {
			dossierFileCacheModel.dossierFileNo = Long.MIN_VALUE;
		}

		dossierFileCacheModel.dossierFileDate = getDossierFileDate();

		String dossierFileDate = dossierFileCacheModel.dossierFileDate;

		if ((dossierFileDate != null) && (dossierFileDate.length() == 0)) {
			dossierFileCacheModel.dossierFileDate = null;
		}

		dossierFileCacheModel.original = getOriginal();

		dossierFileCacheModel.isNew = getIsNew();

		dossierFileCacheModel.signed = getSigned();

		dossierFileCacheModel.signCheck = getSignCheck();

		dossierFileCacheModel.signInfo = getSignInfo();

		String signInfo = dossierFileCacheModel.signInfo;

		if ((signInfo != null) && (signInfo.length() == 0)) {
			dossierFileCacheModel.signInfo = null;
		}

		dossierFileCacheModel.formScript = getFormScript();

		String formScript = dossierFileCacheModel.formScript;

		if ((formScript != null) && (formScript.length() == 0)) {
			dossierFileCacheModel.formScript = null;
		}

		dossierFileCacheModel.formReport = getFormReport();

		String formReport = dossierFileCacheModel.formReport;

		if ((formReport != null) && (formReport.length() == 0)) {
			dossierFileCacheModel.formReport = null;
		}

		return dossierFileCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(51);

		sb.append("{uuid=");
		sb.append(getUuid());
		sb.append(", dossierFileId=");
		sb.append(getDossierFileId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", dossierId=");
		sb.append(getDossierId());
		sb.append(", referenceUid=");
		sb.append(getReferenceUid());
		sb.append(", dossierTemplateNo=");
		sb.append(getDossierTemplateNo());
		sb.append(", dossierPartNo=");
		sb.append(getDossierPartNo());
		sb.append(", fileTemplateNo=");
		sb.append(getFileTemplateNo());
		sb.append(", displayName=");
		sb.append(getDisplayName());
		sb.append(", formData=");
		sb.append(getFormData());
		sb.append(", fileEntryId=");
		sb.append(getFileEntryId());
		sb.append(", dossierFileNo=");
		sb.append(getDossierFileNo());
		sb.append(", dossierFileDate=");
		sb.append(getDossierFileDate());
		sb.append(", original=");
		sb.append(getOriginal());
		sb.append(", isNew=");
		sb.append(getIsNew());
		sb.append(", signed=");
		sb.append(getSigned());
		sb.append(", signCheck=");
		sb.append(getSignCheck());
		sb.append(", signInfo=");
		sb.append(getSignInfo());
		sb.append(", formScript=");
		sb.append(getFormScript());
		sb.append(", formReport=");
		sb.append(getFormReport());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(79);

		sb.append("<model><model-name>");
		sb.append("org.opencps.backend.dossiermgt.model.DossierFile");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>uuid</column-name><column-value><![CDATA[");
		sb.append(getUuid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dossierFileId</column-name><column-value><![CDATA[");
		sb.append(getDossierFileId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dossierId</column-name><column-value><![CDATA[");
		sb.append(getDossierId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>referenceUid</column-name><column-value><![CDATA[");
		sb.append(getReferenceUid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dossierTemplateNo</column-name><column-value><![CDATA[");
		sb.append(getDossierTemplateNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dossierPartNo</column-name><column-value><![CDATA[");
		sb.append(getDossierPartNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>fileTemplateNo</column-name><column-value><![CDATA[");
		sb.append(getFileTemplateNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>displayName</column-name><column-value><![CDATA[");
		sb.append(getDisplayName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>formData</column-name><column-value><![CDATA[");
		sb.append(getFormData());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>fileEntryId</column-name><column-value><![CDATA[");
		sb.append(getFileEntryId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dossierFileNo</column-name><column-value><![CDATA[");
		sb.append(getDossierFileNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dossierFileDate</column-name><column-value><![CDATA[");
		sb.append(getDossierFileDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>original</column-name><column-value><![CDATA[");
		sb.append(getOriginal());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>isNew</column-name><column-value><![CDATA[");
		sb.append(getIsNew());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>signed</column-name><column-value><![CDATA[");
		sb.append(getSigned());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>signCheck</column-name><column-value><![CDATA[");
		sb.append(getSignCheck());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>signInfo</column-name><column-value><![CDATA[");
		sb.append(getSignInfo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>formScript</column-name><column-value><![CDATA[");
		sb.append(getFormScript());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>formReport</column-name><column-value><![CDATA[");
		sb.append(getFormReport());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = DossierFile.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			DossierFile.class
		};
	private String _uuid;
	private String _originalUuid;
	private long _dossierFileId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private long _dossierId;
	private String _referenceUid;
	private String _dossierTemplateNo;
	private String _dossierPartNo;
	private String _fileTemplateNo;
	private String _displayName;
	private String _formData;
	private long _fileEntryId;
	private Date _dossierFileNo;
	private String _dossierFileDate;
	private boolean _original;
	private boolean _isNew;
	private boolean _signed;
	private int _signCheck;
	private String _signInfo;
	private String _formScript;
	private String _formReport;
	private long _columnBitmask;
	private DossierFile _escapedModel;
}