/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package org.opencps.backend.dossiermgt.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.exportimport.kernel.lar.StagedModelType;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.PortalUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;

import org.opencps.backend.dossiermgt.model.PaymentFile;
import org.opencps.backend.dossiermgt.model.PaymentFileModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the PaymentFile service. Represents a row in the &quot;opencps_paymentfile&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link PaymentFileModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link PaymentFileImpl}.
 * </p>
 *
 * @author huymq
 * @see PaymentFileImpl
 * @see PaymentFile
 * @see PaymentFileModel
 * @generated
 */
@ProviderType
public class PaymentFileModelImpl extends BaseModelImpl<PaymentFile>
	implements PaymentFileModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a payment file model instance should use the {@link PaymentFile} interface instead.
	 */
	public static final String TABLE_NAME = "opencps_paymentfile";
	public static final Object[][] TABLE_COLUMNS = {
			{ "uuid_", Types.VARCHAR },
			{ "paymentFileId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "dossierId", Types.BIGINT },
			{ "referenceUid", Types.VARCHAR },
			{ "govAgencyCode", Types.VARCHAR },
			{ "govAgencyName", Types.VARCHAR },
			{ "isNew", Types.BOOLEAN },
			{ "paymentFee", Types.VARCHAR },
			{ "paymentAmount", Types.DOUBLE },
			{ "paymentNote", Types.VARCHAR },
			{ "paymentOptions", Types.VARCHAR },
			{ "keypayUrl", Types.TIMESTAMP },
			{ "keypayTransactionId", Types.BIGINT },
			{ "keypayGoodCode", Types.TIMESTAMP },
			{ "keypayMerchantCode", Types.TIMESTAMP },
			{ "bankInfo", Types.TIMESTAMP },
			{ "paymentStatus", Types.INTEGER },
			{ "paymentMethod", Types.INTEGER },
			{ "confirmDatetime", Types.TIMESTAMP },
			{ "confirmFileEntryId", Types.BIGINT },
			{ "confirmNote", Types.VARCHAR },
			{ "approveDatetime", Types.TIMESTAMP },
			{ "accountUserName", Types.VARCHAR },
			{ "govAgencyTaxNo", Types.VARCHAR },
			{ "invoiceTemplateNo", Types.VARCHAR },
			{ "invoiceIssueNo", Types.VARCHAR },
			{ "invoiceNo", Types.VARCHAR },
			{ "invoiceFileEntryId", Types.BIGINT },
			{ "paymentGateStatusCode", Types.INTEGER },
			{ "paymentGateCheckCode", Types.INTEGER }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("uuid_", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("paymentFileId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("dossierId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("referenceUid", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("govAgencyCode", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("govAgencyName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("isNew", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("paymentFee", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("paymentAmount", Types.DOUBLE);
		TABLE_COLUMNS_MAP.put("paymentNote", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("paymentOptions", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("keypayUrl", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("keypayTransactionId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("keypayGoodCode", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("keypayMerchantCode", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("bankInfo", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("paymentStatus", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("paymentMethod", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("confirmDatetime", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("confirmFileEntryId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("confirmNote", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("approveDatetime", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("accountUserName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("govAgencyTaxNo", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("invoiceTemplateNo", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("invoiceIssueNo", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("invoiceNo", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("invoiceFileEntryId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("paymentGateStatusCode", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("paymentGateCheckCode", Types.INTEGER);
	}

	public static final String TABLE_SQL_CREATE = "create table opencps_paymentfile (uuid_ VARCHAR(75) null,paymentFileId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,dossierId LONG,referenceUid VARCHAR(75) null,govAgencyCode VARCHAR(75) null,govAgencyName VARCHAR(75) null,isNew BOOLEAN,paymentFee VARCHAR(75) null,paymentAmount DOUBLE,paymentNote VARCHAR(75) null,paymentOptions VARCHAR(75) null,keypayUrl DATE null,keypayTransactionId LONG,keypayGoodCode DATE null,keypayMerchantCode DATE null,bankInfo DATE null,paymentStatus INTEGER,paymentMethod INTEGER,confirmDatetime DATE null,confirmFileEntryId LONG,confirmNote VARCHAR(75) null,approveDatetime DATE null,accountUserName VARCHAR(75) null,govAgencyTaxNo VARCHAR(75) null,invoiceTemplateNo VARCHAR(75) null,invoiceIssueNo VARCHAR(75) null,invoiceNo VARCHAR(75) null,invoiceFileEntryId LONG,paymentGateStatusCode INTEGER,paymentGateCheckCode INTEGER)";
	public static final String TABLE_SQL_DROP = "drop table opencps_paymentfile";
	public static final String ORDER_BY_JPQL = " ORDER BY paymentFile.paymentFileId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY opencps_paymentfile.paymentFileId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(org.opencps.backend.dossiermgt.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.org.opencps.backend.dossiermgt.model.PaymentFile"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(org.opencps.backend.dossiermgt.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.org.opencps.backend.dossiermgt.model.PaymentFile"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(org.opencps.backend.dossiermgt.service.util.ServiceProps.get(
				"value.object.column.bitmask.enabled.org.opencps.backend.dossiermgt.model.PaymentFile"),
			true);
	public static final long COMPANYID_COLUMN_BITMASK = 1L;
	public static final long GROUPID_COLUMN_BITMASK = 2L;
	public static final long UUID_COLUMN_BITMASK = 4L;
	public static final long PAYMENTFILEID_COLUMN_BITMASK = 8L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(org.opencps.backend.dossiermgt.service.util.ServiceProps.get(
				"lock.expiration.time.org.opencps.backend.dossiermgt.model.PaymentFile"));

	public PaymentFileModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _paymentFileId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setPaymentFileId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _paymentFileId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return PaymentFile.class;
	}

	@Override
	public String getModelClassName() {
		return PaymentFile.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("uuid", getUuid());
		attributes.put("paymentFileId", getPaymentFileId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("dossierId", getDossierId());
		attributes.put("referenceUid", getReferenceUid());
		attributes.put("govAgencyCode", getGovAgencyCode());
		attributes.put("govAgencyName", getGovAgencyName());
		attributes.put("isNew", getIsNew());
		attributes.put("paymentFee", getPaymentFee());
		attributes.put("paymentAmount", getPaymentAmount());
		attributes.put("paymentNote", getPaymentNote());
		attributes.put("paymentOptions", getPaymentOptions());
		attributes.put("keypayUrl", getKeypayUrl());
		attributes.put("keypayTransactionId", getKeypayTransactionId());
		attributes.put("keypayGoodCode", getKeypayGoodCode());
		attributes.put("keypayMerchantCode", getKeypayMerchantCode());
		attributes.put("bankInfo", getBankInfo());
		attributes.put("paymentStatus", getPaymentStatus());
		attributes.put("paymentMethod", getPaymentMethod());
		attributes.put("confirmDatetime", getConfirmDatetime());
		attributes.put("confirmFileEntryId", getConfirmFileEntryId());
		attributes.put("confirmNote", getConfirmNote());
		attributes.put("approveDatetime", getApproveDatetime());
		attributes.put("accountUserName", getAccountUserName());
		attributes.put("govAgencyTaxNo", getGovAgencyTaxNo());
		attributes.put("invoiceTemplateNo", getInvoiceTemplateNo());
		attributes.put("invoiceIssueNo", getInvoiceIssueNo());
		attributes.put("invoiceNo", getInvoiceNo());
		attributes.put("invoiceFileEntryId", getInvoiceFileEntryId());
		attributes.put("paymentGateStatusCode", getPaymentGateStatusCode());
		attributes.put("paymentGateCheckCode", getPaymentGateCheckCode());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String uuid = (String)attributes.get("uuid");

		if (uuid != null) {
			setUuid(uuid);
		}

		Long paymentFileId = (Long)attributes.get("paymentFileId");

		if (paymentFileId != null) {
			setPaymentFileId(paymentFileId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Long dossierId = (Long)attributes.get("dossierId");

		if (dossierId != null) {
			setDossierId(dossierId);
		}

		String referenceUid = (String)attributes.get("referenceUid");

		if (referenceUid != null) {
			setReferenceUid(referenceUid);
		}

		String govAgencyCode = (String)attributes.get("govAgencyCode");

		if (govAgencyCode != null) {
			setGovAgencyCode(govAgencyCode);
		}

		String govAgencyName = (String)attributes.get("govAgencyName");

		if (govAgencyName != null) {
			setGovAgencyName(govAgencyName);
		}

		Boolean isNew = (Boolean)attributes.get("isNew");

		if (isNew != null) {
			setIsNew(isNew);
		}

		String paymentFee = (String)attributes.get("paymentFee");

		if (paymentFee != null) {
			setPaymentFee(paymentFee);
		}

		Double paymentAmount = (Double)attributes.get("paymentAmount");

		if (paymentAmount != null) {
			setPaymentAmount(paymentAmount);
		}

		String paymentNote = (String)attributes.get("paymentNote");

		if (paymentNote != null) {
			setPaymentNote(paymentNote);
		}

		String paymentOptions = (String)attributes.get("paymentOptions");

		if (paymentOptions != null) {
			setPaymentOptions(paymentOptions);
		}

		Date keypayUrl = (Date)attributes.get("keypayUrl");

		if (keypayUrl != null) {
			setKeypayUrl(keypayUrl);
		}

		Long keypayTransactionId = (Long)attributes.get("keypayTransactionId");

		if (keypayTransactionId != null) {
			setKeypayTransactionId(keypayTransactionId);
		}

		Date keypayGoodCode = (Date)attributes.get("keypayGoodCode");

		if (keypayGoodCode != null) {
			setKeypayGoodCode(keypayGoodCode);
		}

		Date keypayMerchantCode = (Date)attributes.get("keypayMerchantCode");

		if (keypayMerchantCode != null) {
			setKeypayMerchantCode(keypayMerchantCode);
		}

		Date bankInfo = (Date)attributes.get("bankInfo");

		if (bankInfo != null) {
			setBankInfo(bankInfo);
		}

		Integer paymentStatus = (Integer)attributes.get("paymentStatus");

		if (paymentStatus != null) {
			setPaymentStatus(paymentStatus);
		}

		Integer paymentMethod = (Integer)attributes.get("paymentMethod");

		if (paymentMethod != null) {
			setPaymentMethod(paymentMethod);
		}

		Date confirmDatetime = (Date)attributes.get("confirmDatetime");

		if (confirmDatetime != null) {
			setConfirmDatetime(confirmDatetime);
		}

		Long confirmFileEntryId = (Long)attributes.get("confirmFileEntryId");

		if (confirmFileEntryId != null) {
			setConfirmFileEntryId(confirmFileEntryId);
		}

		String confirmNote = (String)attributes.get("confirmNote");

		if (confirmNote != null) {
			setConfirmNote(confirmNote);
		}

		Date approveDatetime = (Date)attributes.get("approveDatetime");

		if (approveDatetime != null) {
			setApproveDatetime(approveDatetime);
		}

		String accountUserName = (String)attributes.get("accountUserName");

		if (accountUserName != null) {
			setAccountUserName(accountUserName);
		}

		String govAgencyTaxNo = (String)attributes.get("govAgencyTaxNo");

		if (govAgencyTaxNo != null) {
			setGovAgencyTaxNo(govAgencyTaxNo);
		}

		String invoiceTemplateNo = (String)attributes.get("invoiceTemplateNo");

		if (invoiceTemplateNo != null) {
			setInvoiceTemplateNo(invoiceTemplateNo);
		}

		String invoiceIssueNo = (String)attributes.get("invoiceIssueNo");

		if (invoiceIssueNo != null) {
			setInvoiceIssueNo(invoiceIssueNo);
		}

		String invoiceNo = (String)attributes.get("invoiceNo");

		if (invoiceNo != null) {
			setInvoiceNo(invoiceNo);
		}

		Long invoiceFileEntryId = (Long)attributes.get("invoiceFileEntryId");

		if (invoiceFileEntryId != null) {
			setInvoiceFileEntryId(invoiceFileEntryId);
		}

		Integer paymentGateStatusCode = (Integer)attributes.get(
				"paymentGateStatusCode");

		if (paymentGateStatusCode != null) {
			setPaymentGateStatusCode(paymentGateStatusCode);
		}

		Integer paymentGateCheckCode = (Integer)attributes.get(
				"paymentGateCheckCode");

		if (paymentGateCheckCode != null) {
			setPaymentGateCheckCode(paymentGateCheckCode);
		}
	}

	@Override
	public String getUuid() {
		if (_uuid == null) {
			return StringPool.BLANK;
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_originalUuid == null) {
			_originalUuid = _uuid;
		}

		_uuid = uuid;
	}

	public String getOriginalUuid() {
		return GetterUtil.getString(_originalUuid);
	}

	@Override
	public long getPaymentFileId() {
		return _paymentFileId;
	}

	@Override
	public void setPaymentFileId(long paymentFileId) {
		_paymentFileId = paymentFileId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException pe) {
			return StringPool.BLANK;
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		_modifiedDate = modifiedDate;
	}

	@Override
	public long getDossierId() {
		return _dossierId;
	}

	@Override
	public void setDossierId(long dossierId) {
		_dossierId = dossierId;
	}

	@Override
	public String getReferenceUid() {
		if (_referenceUid == null) {
			return StringPool.BLANK;
		}
		else {
			return _referenceUid;
		}
	}

	@Override
	public void setReferenceUid(String referenceUid) {
		_referenceUid = referenceUid;
	}

	@Override
	public String getGovAgencyCode() {
		if (_govAgencyCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _govAgencyCode;
		}
	}

	@Override
	public void setGovAgencyCode(String govAgencyCode) {
		_govAgencyCode = govAgencyCode;
	}

	@Override
	public String getGovAgencyName() {
		if (_govAgencyName == null) {
			return StringPool.BLANK;
		}
		else {
			return _govAgencyName;
		}
	}

	@Override
	public void setGovAgencyName(String govAgencyName) {
		_govAgencyName = govAgencyName;
	}

	@Override
	public boolean getIsNew() {
		return _isNew;
	}

	@Override
	public boolean isIsNew() {
		return _isNew;
	}

	@Override
	public void setIsNew(boolean isNew) {
		_isNew = isNew;
	}

	@Override
	public String getPaymentFee() {
		if (_paymentFee == null) {
			return StringPool.BLANK;
		}
		else {
			return _paymentFee;
		}
	}

	@Override
	public void setPaymentFee(String paymentFee) {
		_paymentFee = paymentFee;
	}

	@Override
	public double getPaymentAmount() {
		return _paymentAmount;
	}

	@Override
	public void setPaymentAmount(double paymentAmount) {
		_paymentAmount = paymentAmount;
	}

	@Override
	public String getPaymentNote() {
		if (_paymentNote == null) {
			return StringPool.BLANK;
		}
		else {
			return _paymentNote;
		}
	}

	@Override
	public void setPaymentNote(String paymentNote) {
		_paymentNote = paymentNote;
	}

	@Override
	public String getPaymentOptions() {
		if (_paymentOptions == null) {
			return StringPool.BLANK;
		}
		else {
			return _paymentOptions;
		}
	}

	@Override
	public void setPaymentOptions(String paymentOptions) {
		_paymentOptions = paymentOptions;
	}

	@Override
	public Date getKeypayUrl() {
		return _keypayUrl;
	}

	@Override
	public void setKeypayUrl(Date keypayUrl) {
		_keypayUrl = keypayUrl;
	}

	@Override
	public long getKeypayTransactionId() {
		return _keypayTransactionId;
	}

	@Override
	public void setKeypayTransactionId(long keypayTransactionId) {
		_keypayTransactionId = keypayTransactionId;
	}

	@Override
	public Date getKeypayGoodCode() {
		return _keypayGoodCode;
	}

	@Override
	public void setKeypayGoodCode(Date keypayGoodCode) {
		_keypayGoodCode = keypayGoodCode;
	}

	@Override
	public Date getKeypayMerchantCode() {
		return _keypayMerchantCode;
	}

	@Override
	public void setKeypayMerchantCode(Date keypayMerchantCode) {
		_keypayMerchantCode = keypayMerchantCode;
	}

	@Override
	public Date getBankInfo() {
		return _bankInfo;
	}

	@Override
	public void setBankInfo(Date bankInfo) {
		_bankInfo = bankInfo;
	}

	@Override
	public int getPaymentStatus() {
		return _paymentStatus;
	}

	@Override
	public void setPaymentStatus(int paymentStatus) {
		_paymentStatus = paymentStatus;
	}

	@Override
	public int getPaymentMethod() {
		return _paymentMethod;
	}

	@Override
	public void setPaymentMethod(int paymentMethod) {
		_paymentMethod = paymentMethod;
	}

	@Override
	public Date getConfirmDatetime() {
		return _confirmDatetime;
	}

	@Override
	public void setConfirmDatetime(Date confirmDatetime) {
		_confirmDatetime = confirmDatetime;
	}

	@Override
	public long getConfirmFileEntryId() {
		return _confirmFileEntryId;
	}

	@Override
	public void setConfirmFileEntryId(long confirmFileEntryId) {
		_confirmFileEntryId = confirmFileEntryId;
	}

	@Override
	public String getConfirmNote() {
		if (_confirmNote == null) {
			return StringPool.BLANK;
		}
		else {
			return _confirmNote;
		}
	}

	@Override
	public void setConfirmNote(String confirmNote) {
		_confirmNote = confirmNote;
	}

	@Override
	public Date getApproveDatetime() {
		return _approveDatetime;
	}

	@Override
	public void setApproveDatetime(Date approveDatetime) {
		_approveDatetime = approveDatetime;
	}

	@Override
	public String getAccountUserName() {
		if (_accountUserName == null) {
			return StringPool.BLANK;
		}
		else {
			return _accountUserName;
		}
	}

	@Override
	public void setAccountUserName(String accountUserName) {
		_accountUserName = accountUserName;
	}

	@Override
	public String getGovAgencyTaxNo() {
		if (_govAgencyTaxNo == null) {
			return StringPool.BLANK;
		}
		else {
			return _govAgencyTaxNo;
		}
	}

	@Override
	public void setGovAgencyTaxNo(String govAgencyTaxNo) {
		_govAgencyTaxNo = govAgencyTaxNo;
	}

	@Override
	public String getInvoiceTemplateNo() {
		if (_invoiceTemplateNo == null) {
			return StringPool.BLANK;
		}
		else {
			return _invoiceTemplateNo;
		}
	}

	@Override
	public void setInvoiceTemplateNo(String invoiceTemplateNo) {
		_invoiceTemplateNo = invoiceTemplateNo;
	}

	@Override
	public String getInvoiceIssueNo() {
		if (_invoiceIssueNo == null) {
			return StringPool.BLANK;
		}
		else {
			return _invoiceIssueNo;
		}
	}

	@Override
	public void setInvoiceIssueNo(String invoiceIssueNo) {
		_invoiceIssueNo = invoiceIssueNo;
	}

	@Override
	public String getInvoiceNo() {
		if (_invoiceNo == null) {
			return StringPool.BLANK;
		}
		else {
			return _invoiceNo;
		}
	}

	@Override
	public void setInvoiceNo(String invoiceNo) {
		_invoiceNo = invoiceNo;
	}

	@Override
	public long getInvoiceFileEntryId() {
		return _invoiceFileEntryId;
	}

	@Override
	public void setInvoiceFileEntryId(long invoiceFileEntryId) {
		_invoiceFileEntryId = invoiceFileEntryId;
	}

	@Override
	public int getPaymentGateStatusCode() {
		return _paymentGateStatusCode;
	}

	@Override
	public void setPaymentGateStatusCode(int paymentGateStatusCode) {
		_paymentGateStatusCode = paymentGateStatusCode;
	}

	@Override
	public int getPaymentGateCheckCode() {
		return _paymentGateCheckCode;
	}

	@Override
	public void setPaymentGateCheckCode(int paymentGateCheckCode) {
		_paymentGateCheckCode = paymentGateCheckCode;
	}

	@Override
	public StagedModelType getStagedModelType() {
		return new StagedModelType(PortalUtil.getClassNameId(
				PaymentFile.class.getName()));
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			PaymentFile.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public PaymentFile toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (PaymentFile)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		PaymentFileImpl paymentFileImpl = new PaymentFileImpl();

		paymentFileImpl.setUuid(getUuid());
		paymentFileImpl.setPaymentFileId(getPaymentFileId());
		paymentFileImpl.setGroupId(getGroupId());
		paymentFileImpl.setCompanyId(getCompanyId());
		paymentFileImpl.setUserId(getUserId());
		paymentFileImpl.setUserName(getUserName());
		paymentFileImpl.setCreateDate(getCreateDate());
		paymentFileImpl.setModifiedDate(getModifiedDate());
		paymentFileImpl.setDossierId(getDossierId());
		paymentFileImpl.setReferenceUid(getReferenceUid());
		paymentFileImpl.setGovAgencyCode(getGovAgencyCode());
		paymentFileImpl.setGovAgencyName(getGovAgencyName());
		paymentFileImpl.setIsNew(getIsNew());
		paymentFileImpl.setPaymentFee(getPaymentFee());
		paymentFileImpl.setPaymentAmount(getPaymentAmount());
		paymentFileImpl.setPaymentNote(getPaymentNote());
		paymentFileImpl.setPaymentOptions(getPaymentOptions());
		paymentFileImpl.setKeypayUrl(getKeypayUrl());
		paymentFileImpl.setKeypayTransactionId(getKeypayTransactionId());
		paymentFileImpl.setKeypayGoodCode(getKeypayGoodCode());
		paymentFileImpl.setKeypayMerchantCode(getKeypayMerchantCode());
		paymentFileImpl.setBankInfo(getBankInfo());
		paymentFileImpl.setPaymentStatus(getPaymentStatus());
		paymentFileImpl.setPaymentMethod(getPaymentMethod());
		paymentFileImpl.setConfirmDatetime(getConfirmDatetime());
		paymentFileImpl.setConfirmFileEntryId(getConfirmFileEntryId());
		paymentFileImpl.setConfirmNote(getConfirmNote());
		paymentFileImpl.setApproveDatetime(getApproveDatetime());
		paymentFileImpl.setAccountUserName(getAccountUserName());
		paymentFileImpl.setGovAgencyTaxNo(getGovAgencyTaxNo());
		paymentFileImpl.setInvoiceTemplateNo(getInvoiceTemplateNo());
		paymentFileImpl.setInvoiceIssueNo(getInvoiceIssueNo());
		paymentFileImpl.setInvoiceNo(getInvoiceNo());
		paymentFileImpl.setInvoiceFileEntryId(getInvoiceFileEntryId());
		paymentFileImpl.setPaymentGateStatusCode(getPaymentGateStatusCode());
		paymentFileImpl.setPaymentGateCheckCode(getPaymentGateCheckCode());

		paymentFileImpl.resetOriginalValues();

		return paymentFileImpl;
	}

	@Override
	public int compareTo(PaymentFile paymentFile) {
		long primaryKey = paymentFile.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof PaymentFile)) {
			return false;
		}

		PaymentFile paymentFile = (PaymentFile)obj;

		long primaryKey = paymentFile.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		PaymentFileModelImpl paymentFileModelImpl = this;

		paymentFileModelImpl._originalUuid = paymentFileModelImpl._uuid;

		paymentFileModelImpl._originalGroupId = paymentFileModelImpl._groupId;

		paymentFileModelImpl._setOriginalGroupId = false;

		paymentFileModelImpl._originalCompanyId = paymentFileModelImpl._companyId;

		paymentFileModelImpl._setOriginalCompanyId = false;

		paymentFileModelImpl._setModifiedDate = false;

		paymentFileModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<PaymentFile> toCacheModel() {
		PaymentFileCacheModel paymentFileCacheModel = new PaymentFileCacheModel();

		paymentFileCacheModel.uuid = getUuid();

		String uuid = paymentFileCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			paymentFileCacheModel.uuid = null;
		}

		paymentFileCacheModel.paymentFileId = getPaymentFileId();

		paymentFileCacheModel.groupId = getGroupId();

		paymentFileCacheModel.companyId = getCompanyId();

		paymentFileCacheModel.userId = getUserId();

		paymentFileCacheModel.userName = getUserName();

		String userName = paymentFileCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			paymentFileCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			paymentFileCacheModel.createDate = createDate.getTime();
		}
		else {
			paymentFileCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			paymentFileCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			paymentFileCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		paymentFileCacheModel.dossierId = getDossierId();

		paymentFileCacheModel.referenceUid = getReferenceUid();

		String referenceUid = paymentFileCacheModel.referenceUid;

		if ((referenceUid != null) && (referenceUid.length() == 0)) {
			paymentFileCacheModel.referenceUid = null;
		}

		paymentFileCacheModel.govAgencyCode = getGovAgencyCode();

		String govAgencyCode = paymentFileCacheModel.govAgencyCode;

		if ((govAgencyCode != null) && (govAgencyCode.length() == 0)) {
			paymentFileCacheModel.govAgencyCode = null;
		}

		paymentFileCacheModel.govAgencyName = getGovAgencyName();

		String govAgencyName = paymentFileCacheModel.govAgencyName;

		if ((govAgencyName != null) && (govAgencyName.length() == 0)) {
			paymentFileCacheModel.govAgencyName = null;
		}

		paymentFileCacheModel.isNew = getIsNew();

		paymentFileCacheModel.paymentFee = getPaymentFee();

		String paymentFee = paymentFileCacheModel.paymentFee;

		if ((paymentFee != null) && (paymentFee.length() == 0)) {
			paymentFileCacheModel.paymentFee = null;
		}

		paymentFileCacheModel.paymentAmount = getPaymentAmount();

		paymentFileCacheModel.paymentNote = getPaymentNote();

		String paymentNote = paymentFileCacheModel.paymentNote;

		if ((paymentNote != null) && (paymentNote.length() == 0)) {
			paymentFileCacheModel.paymentNote = null;
		}

		paymentFileCacheModel.paymentOptions = getPaymentOptions();

		String paymentOptions = paymentFileCacheModel.paymentOptions;

		if ((paymentOptions != null) && (paymentOptions.length() == 0)) {
			paymentFileCacheModel.paymentOptions = null;
		}

		Date keypayUrl = getKeypayUrl();

		if (keypayUrl != null) {
			paymentFileCacheModel.keypayUrl = keypayUrl.getTime();
		}
		else {
			paymentFileCacheModel.keypayUrl = Long.MIN_VALUE;
		}

		paymentFileCacheModel.keypayTransactionId = getKeypayTransactionId();

		Date keypayGoodCode = getKeypayGoodCode();

		if (keypayGoodCode != null) {
			paymentFileCacheModel.keypayGoodCode = keypayGoodCode.getTime();
		}
		else {
			paymentFileCacheModel.keypayGoodCode = Long.MIN_VALUE;
		}

		Date keypayMerchantCode = getKeypayMerchantCode();

		if (keypayMerchantCode != null) {
			paymentFileCacheModel.keypayMerchantCode = keypayMerchantCode.getTime();
		}
		else {
			paymentFileCacheModel.keypayMerchantCode = Long.MIN_VALUE;
		}

		Date bankInfo = getBankInfo();

		if (bankInfo != null) {
			paymentFileCacheModel.bankInfo = bankInfo.getTime();
		}
		else {
			paymentFileCacheModel.bankInfo = Long.MIN_VALUE;
		}

		paymentFileCacheModel.paymentStatus = getPaymentStatus();

		paymentFileCacheModel.paymentMethod = getPaymentMethod();

		Date confirmDatetime = getConfirmDatetime();

		if (confirmDatetime != null) {
			paymentFileCacheModel.confirmDatetime = confirmDatetime.getTime();
		}
		else {
			paymentFileCacheModel.confirmDatetime = Long.MIN_VALUE;
		}

		paymentFileCacheModel.confirmFileEntryId = getConfirmFileEntryId();

		paymentFileCacheModel.confirmNote = getConfirmNote();

		String confirmNote = paymentFileCacheModel.confirmNote;

		if ((confirmNote != null) && (confirmNote.length() == 0)) {
			paymentFileCacheModel.confirmNote = null;
		}

		Date approveDatetime = getApproveDatetime();

		if (approveDatetime != null) {
			paymentFileCacheModel.approveDatetime = approveDatetime.getTime();
		}
		else {
			paymentFileCacheModel.approveDatetime = Long.MIN_VALUE;
		}

		paymentFileCacheModel.accountUserName = getAccountUserName();

		String accountUserName = paymentFileCacheModel.accountUserName;

		if ((accountUserName != null) && (accountUserName.length() == 0)) {
			paymentFileCacheModel.accountUserName = null;
		}

		paymentFileCacheModel.govAgencyTaxNo = getGovAgencyTaxNo();

		String govAgencyTaxNo = paymentFileCacheModel.govAgencyTaxNo;

		if ((govAgencyTaxNo != null) && (govAgencyTaxNo.length() == 0)) {
			paymentFileCacheModel.govAgencyTaxNo = null;
		}

		paymentFileCacheModel.invoiceTemplateNo = getInvoiceTemplateNo();

		String invoiceTemplateNo = paymentFileCacheModel.invoiceTemplateNo;

		if ((invoiceTemplateNo != null) && (invoiceTemplateNo.length() == 0)) {
			paymentFileCacheModel.invoiceTemplateNo = null;
		}

		paymentFileCacheModel.invoiceIssueNo = getInvoiceIssueNo();

		String invoiceIssueNo = paymentFileCacheModel.invoiceIssueNo;

		if ((invoiceIssueNo != null) && (invoiceIssueNo.length() == 0)) {
			paymentFileCacheModel.invoiceIssueNo = null;
		}

		paymentFileCacheModel.invoiceNo = getInvoiceNo();

		String invoiceNo = paymentFileCacheModel.invoiceNo;

		if ((invoiceNo != null) && (invoiceNo.length() == 0)) {
			paymentFileCacheModel.invoiceNo = null;
		}

		paymentFileCacheModel.invoiceFileEntryId = getInvoiceFileEntryId();

		paymentFileCacheModel.paymentGateStatusCode = getPaymentGateStatusCode();

		paymentFileCacheModel.paymentGateCheckCode = getPaymentGateCheckCode();

		return paymentFileCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(73);

		sb.append("{uuid=");
		sb.append(getUuid());
		sb.append(", paymentFileId=");
		sb.append(getPaymentFileId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", dossierId=");
		sb.append(getDossierId());
		sb.append(", referenceUid=");
		sb.append(getReferenceUid());
		sb.append(", govAgencyCode=");
		sb.append(getGovAgencyCode());
		sb.append(", govAgencyName=");
		sb.append(getGovAgencyName());
		sb.append(", isNew=");
		sb.append(getIsNew());
		sb.append(", paymentFee=");
		sb.append(getPaymentFee());
		sb.append(", paymentAmount=");
		sb.append(getPaymentAmount());
		sb.append(", paymentNote=");
		sb.append(getPaymentNote());
		sb.append(", paymentOptions=");
		sb.append(getPaymentOptions());
		sb.append(", keypayUrl=");
		sb.append(getKeypayUrl());
		sb.append(", keypayTransactionId=");
		sb.append(getKeypayTransactionId());
		sb.append(", keypayGoodCode=");
		sb.append(getKeypayGoodCode());
		sb.append(", keypayMerchantCode=");
		sb.append(getKeypayMerchantCode());
		sb.append(", bankInfo=");
		sb.append(getBankInfo());
		sb.append(", paymentStatus=");
		sb.append(getPaymentStatus());
		sb.append(", paymentMethod=");
		sb.append(getPaymentMethod());
		sb.append(", confirmDatetime=");
		sb.append(getConfirmDatetime());
		sb.append(", confirmFileEntryId=");
		sb.append(getConfirmFileEntryId());
		sb.append(", confirmNote=");
		sb.append(getConfirmNote());
		sb.append(", approveDatetime=");
		sb.append(getApproveDatetime());
		sb.append(", accountUserName=");
		sb.append(getAccountUserName());
		sb.append(", govAgencyTaxNo=");
		sb.append(getGovAgencyTaxNo());
		sb.append(", invoiceTemplateNo=");
		sb.append(getInvoiceTemplateNo());
		sb.append(", invoiceIssueNo=");
		sb.append(getInvoiceIssueNo());
		sb.append(", invoiceNo=");
		sb.append(getInvoiceNo());
		sb.append(", invoiceFileEntryId=");
		sb.append(getInvoiceFileEntryId());
		sb.append(", paymentGateStatusCode=");
		sb.append(getPaymentGateStatusCode());
		sb.append(", paymentGateCheckCode=");
		sb.append(getPaymentGateCheckCode());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(112);

		sb.append("<model><model-name>");
		sb.append("org.opencps.backend.dossiermgt.model.PaymentFile");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>uuid</column-name><column-value><![CDATA[");
		sb.append(getUuid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>paymentFileId</column-name><column-value><![CDATA[");
		sb.append(getPaymentFileId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dossierId</column-name><column-value><![CDATA[");
		sb.append(getDossierId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>referenceUid</column-name><column-value><![CDATA[");
		sb.append(getReferenceUid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>govAgencyCode</column-name><column-value><![CDATA[");
		sb.append(getGovAgencyCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>govAgencyName</column-name><column-value><![CDATA[");
		sb.append(getGovAgencyName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>isNew</column-name><column-value><![CDATA[");
		sb.append(getIsNew());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>paymentFee</column-name><column-value><![CDATA[");
		sb.append(getPaymentFee());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>paymentAmount</column-name><column-value><![CDATA[");
		sb.append(getPaymentAmount());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>paymentNote</column-name><column-value><![CDATA[");
		sb.append(getPaymentNote());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>paymentOptions</column-name><column-value><![CDATA[");
		sb.append(getPaymentOptions());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>keypayUrl</column-name><column-value><![CDATA[");
		sb.append(getKeypayUrl());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>keypayTransactionId</column-name><column-value><![CDATA[");
		sb.append(getKeypayTransactionId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>keypayGoodCode</column-name><column-value><![CDATA[");
		sb.append(getKeypayGoodCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>keypayMerchantCode</column-name><column-value><![CDATA[");
		sb.append(getKeypayMerchantCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>bankInfo</column-name><column-value><![CDATA[");
		sb.append(getBankInfo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>paymentStatus</column-name><column-value><![CDATA[");
		sb.append(getPaymentStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>paymentMethod</column-name><column-value><![CDATA[");
		sb.append(getPaymentMethod());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>confirmDatetime</column-name><column-value><![CDATA[");
		sb.append(getConfirmDatetime());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>confirmFileEntryId</column-name><column-value><![CDATA[");
		sb.append(getConfirmFileEntryId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>confirmNote</column-name><column-value><![CDATA[");
		sb.append(getConfirmNote());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>approveDatetime</column-name><column-value><![CDATA[");
		sb.append(getApproveDatetime());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>accountUserName</column-name><column-value><![CDATA[");
		sb.append(getAccountUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>govAgencyTaxNo</column-name><column-value><![CDATA[");
		sb.append(getGovAgencyTaxNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>invoiceTemplateNo</column-name><column-value><![CDATA[");
		sb.append(getInvoiceTemplateNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>invoiceIssueNo</column-name><column-value><![CDATA[");
		sb.append(getInvoiceIssueNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>invoiceNo</column-name><column-value><![CDATA[");
		sb.append(getInvoiceNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>invoiceFileEntryId</column-name><column-value><![CDATA[");
		sb.append(getInvoiceFileEntryId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>paymentGateStatusCode</column-name><column-value><![CDATA[");
		sb.append(getPaymentGateStatusCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>paymentGateCheckCode</column-name><column-value><![CDATA[");
		sb.append(getPaymentGateCheckCode());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = PaymentFile.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			PaymentFile.class
		};
	private String _uuid;
	private String _originalUuid;
	private long _paymentFileId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private long _dossierId;
	private String _referenceUid;
	private String _govAgencyCode;
	private String _govAgencyName;
	private boolean _isNew;
	private String _paymentFee;
	private double _paymentAmount;
	private String _paymentNote;
	private String _paymentOptions;
	private Date _keypayUrl;
	private long _keypayTransactionId;
	private Date _keypayGoodCode;
	private Date _keypayMerchantCode;
	private Date _bankInfo;
	private int _paymentStatus;
	private int _paymentMethod;
	private Date _confirmDatetime;
	private long _confirmFileEntryId;
	private String _confirmNote;
	private Date _approveDatetime;
	private String _accountUserName;
	private String _govAgencyTaxNo;
	private String _invoiceTemplateNo;
	private String _invoiceIssueNo;
	private String _invoiceNo;
	private long _invoiceFileEntryId;
	private int _paymentGateStatusCode;
	private int _paymentGateCheckCode;
	private long _columnBitmask;
	private PaymentFile _escapedModel;
}